{"ast":null,"code":"var _jsxFileName = \"/home/yuval/Desktop/chatbot_app/Chatbot/web/src/components/ChatBox/ChatLog.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useChat } from \"../../contexts/ChatContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatLog = () => {\n  _s();\n  const {\n    selectedChat\n  } = useChat();\n  const [currentSelectedChat, setCurrentSelectedChat] = useState(null);\n  const [currentChatLogs, setCurrentChatLogs] = useState(null);\n  const chatLogRef = useRef(null);\n  useEffect(() => {\n    if (currentSelectedChat === null) {\n      setCurrentSelectedChat(selectedChat);\n      setCurrentChatLogs(selectedChat.log);\n      return;\n    }\n  }, [selectedChat]);\n  useEffect(() => {\n    if (chatLogRef.current) {\n      chatLogRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\"\n      });\n    }\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatLogWrapper\",\n    children: currentChatLogs.length > 0 && currentChatLogs.map((chat, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatLogRef,\n        className: \"chatLog\",\n        children: [/*#__PURE__*/_jsxDEV(ChatPrompt, {\n          text: chat.prompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(BotMessage, {\n          chatLogRef: chatLogRef,\n          response: chat.response,\n          animate: selectedChat.log.length - 1 === idx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, `msg_${idx}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatLog, \"VHz7xbPlXYPc1bmYc3JvK8jJHf0=\", false, function () {\n  return [useChat];\n});\n_c = ChatLog;\nexport default ChatLog;\nvar _c;\n$RefreshReg$(_c, \"ChatLog\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useChat","jsxDEV","_jsxDEV","ChatLog","_s","selectedChat","currentSelectedChat","setCurrentSelectedChat","currentChatLogs","setCurrentChatLogs","chatLogRef","log","current","scrollIntoView","behavior","block","className","children","length","map","chat","idx","ref","ChatPrompt","text","prompt","fileName","_jsxFileName","lineNumber","columnNumber","BotMessage","response","animate","_c","$RefreshReg$"],"sources":["/home/yuval/Desktop/chatbot_app/Chatbot/web/src/components/ChatBox/ChatLog.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useChat } from \"../../contexts/ChatContext\";\n\nconst ChatLog = () => {\nconst {selectedChat} = useChat();\nconst [currentSelectedChat,setCurrentSelectedChat] = useState(null);\nconst [currentChatLogs,setCurrentChatLogs] = useState(null);\nconst chatLogRef = useRef(null);\n\nuseEffect(()=>{\n    if (currentSelectedChat === null){\n        setCurrentSelectedChat(selectedChat);\n        setCurrentChatLogs(selectedChat.log);\n        return;\n    }\n    \n\n\n},[selectedChat])\n\nuseEffect(() => {\n    if (chatLogRef.current) {\n      chatLogRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\",\n      });\n    }\n    return () => {};\n  }, []);\n\n\n  return (\n    <div className=\"chatLogWrapper\">\n        {currentChatLogs.length > 0 &&\n        currentChatLogs.map((chat, idx) => {\n            return (\n            <div ref={chatLogRef} className=\"chatLog\" key={`msg_${idx}`}>\n                <ChatPrompt text={chat.prompt} />\n                <BotMessage chatLogRef={chatLogRef} response={chat.response} animate={selectedChat.log.length - 1 === idx} />\n            </div>\n        )})}\n    </div>\n  );\n};\n\nexport default ChatLog;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,OAAO,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAACC;EAAY,CAAC,GAAGL,OAAO,CAAC,CAAC;EAChC,MAAM,CAACM,mBAAmB,EAACC,sBAAsB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACnE,MAAM,CAACS,eAAe,EAACC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC3D,MAAMW,UAAU,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAI;IACV,IAAIS,mBAAmB,KAAK,IAAI,EAAC;MAC7BC,sBAAsB,CAACF,YAAY,CAAC;MACpCI,kBAAkB,CAACJ,YAAY,CAACM,GAAG,CAAC;MACpC;IACJ;EAIJ,CAAC,EAAC,CAACN,YAAY,CAAC,CAAC;EAEjBR,SAAS,CAAC,MAAM;IACZ,IAAIa,UAAU,CAACE,OAAO,EAAE;MACtBF,UAAU,CAACE,OAAO,CAACC,cAAc,CAAC;QAChCC,QAAQ,EAAE,QAAQ;QAClBC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;IACA,OAAO,MAAM,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEb,OAAA;IAAKc,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC1BT,eAAe,CAACU,MAAM,GAAG,CAAC,IAC3BV,eAAe,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;MAC/B,oBACAnB,OAAA;QAAKoB,GAAG,EAAEZ,UAAW;QAACM,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACrCf,OAAA,CAACqB,UAAU;UAACC,IAAI,EAAEJ,IAAI,CAACK;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjC3B,OAAA,CAAC4B,UAAU;UAACpB,UAAU,EAAEA,UAAW;UAACqB,QAAQ,EAAEX,IAAI,CAACW,QAAS;UAACC,OAAO,EAAE3B,YAAY,CAACM,GAAG,CAACO,MAAM,GAAG,CAAC,KAAKG;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAFjE,OAAMR,GAAI,EAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGtD,CAAC;IACT,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACzB,EAAA,CAxCID,OAAO;EAAA,QACUH,OAAO;AAAA;AAAAiC,EAAA,GADxB9B,OAAO;AA0Cb,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}