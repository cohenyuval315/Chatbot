{"ast":null,"code":"var _jsxFileName = \"/home/yuval/Desktop/chatbot_app/Chatbot/web/src/context/ChatContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport client from '../API/APIClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext();\nexport function useChat() {\n  _s();\n  return useContext(ChatContext);\n}\n_s(useChat, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const newChat = {\n  \"id\": null,\n  \"title\": null,\n  \"log\": []\n};\nexport function ChatProvider({\n  children\n}) {\n  _s2();\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(newChat);\n  const [inputDisable, setInputDisable] = useState(false);\n  const [error, setError] = useState(false);\n  const [responseFromAPI, setReponseFromAPI] = useState(false);\n  const [botResponse, setBotResponse] = useState(null);\n  const [showIntro, setShowIntro] = useState(true);\n  const [loading, setLoading] = useState(true);\n  const printInterval = 50;\n  const fetchChats = useCallback(async () => {\n    try {\n      const chatsData = await client.fetchChats();\n      setChats(chatsData);\n      setError(false);\n    } catch (error) {\n      console.error(error);\n      setError(error);\n    }\n  }, []);\n  useEffect(() => {\n    fetchChats().then(() => {\n      setLoading(false);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const finishIntro = () => {\n    if (showIntro === true) {\n      setShowIntro(false);\n    }\n  };\n  const onChatSelect = title => {\n    console.debug(\"on chat select\");\n    if (!responseFromAPI) {\n      setInputDisable(false);\n      const item = chats.filter(chat => chat.title === title);\n      if (item.length === 1) {\n        const sc = item[0];\n        console.debug(\"on select ,selected chat:\", sc);\n        setSelectedChat(sc);\n      } else {\n        console.error(\"cant find selected chat: \", title);\n      }\n    }\n    finishIntro();\n  };\n  const onChatNew = () => {\n    console.debug(\"on chat new\");\n    if (!responseFromAPI && selectedChat.id !== null) {\n      setSelectedChat(newChat);\n      setBotResponse(null);\n      setInputDisable(false);\n    }\n    finishIntro();\n  };\n  const addNewChat = (chatId, title, initialPrompt) => {\n    console.debug(\"add new chat\");\n    if (selectedChat.id !== null) {\n      return;\n    }\n    const newUpdatedChat = {\n      id: chatId,\n      title: title,\n      log: [initialPrompt]\n    };\n    setChats([newUpdatedChat, ...chats]);\n    setSelectedChat(newUpdatedChat);\n  };\n  useEffect(() => {\n    if (botResponse && !error) {\n      updateSelectedChat(botResponse);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [botResponse]);\n  const updateSelectedChat = newChat => {\n    const updatedLog = newChat.id === -1 ? [...selectedChat.log, newChat] : selectedChat.log.map(chat => {\n      if (chat.id === -1) {\n        return newChat;\n      }\n      return chat;\n    });\n    const updatedChat = {\n      id: selectedChat.id,\n      title: selectedChat.title,\n      log: updatedLog\n    };\n    setSelectedChat(updatedChat);\n    const updatedChats = chats.map(item => {\n      return item.id === selectedChat.id ? updatedChat : item;\n    });\n    setChats(updatedChats);\n    setBotResponse(null);\n    setInputDisable(false);\n  };\n  const onChatConverse = async prompt => {\n    console.debug(\"chat converse\");\n    if (!responseFromAPI) {\n      try {\n        setReponseFromAPI(true);\n        //setInputDisable(true);\n        const initialPrompt = {\n          id: -1,\n          prompt: prompt\n        };\n        setBotResponse(initialPrompt);\n        const res = await client.converse(selectedChat, prompt);\n        const chatId = res.id;\n        const title = res.title;\n        const response = res.data;\n        setReponseFromAPI(false);\n        setError(false);\n        if (selectedChat.id === null) {\n          addNewChat(chatId, title, initialPrompt);\n        }\n        setBotResponse(response);\n      } catch (err) {\n        setError(err);\n        console.log(err);\n      } finally {\n        console.debug(selectedChat);\n      }\n    }\n  };\n  const regenerateMessage = async () => {};\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      chats,\n      loading,\n      error,\n      inputDisable,\n      selectedChat,\n      onChatSelect,\n      responseFromAPI,\n      onChatNew,\n      printInterval,\n      regenerateMessage,\n      showIntro,\n      finishIntro,\n      onChatConverse\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n_s2(ChatProvider, \"iPSUV5z0677RsM5TjxLf0XGviNU=\");\n_c = ChatProvider;\nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["React","createContext","useCallback","useContext","useEffect","useState","client","jsxDEV","_jsxDEV","ChatContext","useChat","_s","newChat","ChatProvider","children","_s2","chats","setChats","selectedChat","setSelectedChat","inputDisable","setInputDisable","error","setError","responseFromAPI","setReponseFromAPI","botResponse","setBotResponse","showIntro","setShowIntro","loading","setLoading","printInterval","fetchChats","chatsData","console","then","finishIntro","onChatSelect","title","debug","item","filter","chat","length","sc","onChatNew","id","addNewChat","chatId","initialPrompt","newUpdatedChat","log","updateSelectedChat","updatedLog","map","updatedChat","updatedChats","onChatConverse","prompt","res","converse","response","data","err","regenerateMessage","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/yuval/Desktop/chatbot_app/Chatbot/web/src/context/ChatContext.jsx"],"sourcesContent":["\nimport React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport client from '../API/APIClient';\n\n\nconst ChatContext = createContext();\n\nexport function useChat() {\n  return useContext(ChatContext);\n}\n\nexport const newChat = {\n  \"id\":null,\n  \"title\":null,\n  \"log\":[]\n}\n\n\n\nexport function ChatProvider({ children }) {\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(newChat);\n  const [inputDisable, setInputDisable] = useState(false);\n  const [error, setError] = useState(false);\n  const [responseFromAPI,setReponseFromAPI] = useState(false);\n  const [botResponse, setBotResponse] = useState(null);\n  const [showIntro, setShowIntro] = useState(true);\n  const [loading, setLoading] = useState(true)\n\n  const printInterval = 50;\n\n\n\n  const fetchChats = useCallback(async () => {\n    try {\n      const chatsData = await client.fetchChats()\n      setChats(chatsData);\n      setError(false);\n    } catch (error) {\n      console.error(error);\n      setError(error);\n    }\n  },[])\n\n  useEffect(()=>{\n    fetchChats().then(()=>{\n      setLoading(false);\n    });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n\n\n  const finishIntro = () => {\n    if(showIntro === true){\n      setShowIntro(false);\n    }\n  }\n\n  const onChatSelect = (title) => {\n    console.debug(\"on chat select\")\n    if(!responseFromAPI){\n      setInputDisable(false);\n      const item = chats.filter((chat)=>chat.title === title);\n      if (item.length === 1){\n        const sc = item[0];\n        console.debug(\"on select ,selected chat:\",sc)\n        setSelectedChat(sc)\n      }else{\n        console.error(\"cant find selected chat: \",title)\n      }\n    }\n    finishIntro();\n  }\n\n  const onChatNew = () => {\n    console.debug(\"on chat new\")\n    if(!responseFromAPI && selectedChat.id !== null){\n      setSelectedChat(newChat);\n      setBotResponse(null);\n      setInputDisable(false);\n    }\n    finishIntro();\n  }\n\n  const addNewChat = (chatId,title,initialPrompt) => {\n    console.debug(\"add new chat\")\n    if(selectedChat.id !== null){\n      return;\n    }\n    const newUpdatedChat = {\n      id:chatId,\n      title:title,\n      log:[initialPrompt]\n    }\n    setChats([newUpdatedChat,...chats])\n    setSelectedChat(newUpdatedChat);\n  }\n\n  useEffect(() => {\n    if(botResponse && !error){\n      updateSelectedChat(botResponse)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [botResponse])\n\n\n  const updateSelectedChat = (newChat) => {\n    const updatedLog = newChat.id === -1 ? [...selectedChat.log,newChat] : selectedChat.log.map((chat)=>{\n      if(chat.id === -1){\n        return newChat;\n      }\n      return chat;\n    });\n    const updatedChat = {\n      id:selectedChat.id,\n      title:selectedChat.title,\n      log: updatedLog\n    }          \n    setSelectedChat(updatedChat);\n    const updatedChats = chats.map((item)=>{\n      return item.id === selectedChat.id ? updatedChat : item;\n    })\n    setChats(updatedChats);\n    setBotResponse(null);\n    setInputDisable(false);\n  }\n\n  const onChatConverse = async (prompt) => {\n    console.debug(\"chat converse\")\n    if (!responseFromAPI) {\n      try {\n\n        setReponseFromAPI(true);\n        //setInputDisable(true);\n        const initialPrompt = {\n          id:-1,\n          prompt: prompt\n        }\n        setBotResponse(\n          initialPrompt\n        );\n        const res = await client.converse(selectedChat,prompt);\n        const chatId = res.id;\n        const title = res.title;\n        const response = res.data;\n        setReponseFromAPI(false);\n        setError(false);\n        if(selectedChat.id === null){\n          addNewChat(chatId,title,initialPrompt);\n        }\n        setBotResponse(response);\n      } catch (err) {\n        setError(err);\n        console.log(err);\n      }finally{\n        console.debug(selectedChat);\n      }\n    }\n  }\n\n\n  const regenerateMessage = async () => {\n\n  }\n\n\n  return (\n    <ChatContext.Provider value={{ \n      chats, \n      loading,\n      error,\n      inputDisable,\n      selectedChat, \n      onChatSelect, \n      responseFromAPI,\n      onChatNew,\n      printInterval,\n      regenerateMessage,\n      showIntro,\n      finishIntro,\n      onChatConverse }}>\n      {children}\n    </ChatContext.Provider>\n  );\n}"],"mappings":";;;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1F,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtC,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASS,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,OAAOR,UAAU,CAACM,WAAW,CAAC;AAChC;AAACE,EAAA,CAFeD,OAAO;AAIvB,OAAO,MAAME,OAAO,GAAG;EACrB,IAAI,EAAC,IAAI;EACT,OAAO,EAAC,IAAI;EACZ,KAAK,EAAC;AACR,CAAC;AAID,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAACO,OAAO,CAAC;EACzD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACmB,eAAe,EAACC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAM2B,aAAa,GAAG,EAAE;EAIxB,MAAMC,UAAU,GAAG/B,WAAW,CAAC,YAAY;IACzC,IAAI;MACF,MAAMgC,SAAS,GAAG,MAAM5B,MAAM,CAAC2B,UAAU,CAAC,CAAC;MAC3ChB,QAAQ,CAACiB,SAAS,CAAC;MACnBX,QAAQ,CAAC,KAAK,CAAC;IACjB,CAAC,CAAC,OAAOD,KAAK,EAAE;MACda,OAAO,CAACb,KAAK,CAACA,KAAK,CAAC;MACpBC,QAAQ,CAACD,KAAK,CAAC;IACjB;EACF,CAAC,EAAC,EAAE,CAAC;EAELlB,SAAS,CAAC,MAAI;IACZ6B,UAAU,CAAC,CAAC,CAACG,IAAI,CAAC,MAAI;MACpBL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IACJ;EACA,CAAC,EAAC,EAAE,CAAC;EAGL,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAGT,SAAS,KAAK,IAAI,EAAC;MACpBC,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMS,YAAY,GAAIC,KAAK,IAAK;IAC9BJ,OAAO,CAACK,KAAK,CAAC,gBAAgB,CAAC;IAC/B,IAAG,CAAChB,eAAe,EAAC;MAClBH,eAAe,CAAC,KAAK,CAAC;MACtB,MAAMoB,IAAI,GAAGzB,KAAK,CAAC0B,MAAM,CAAEC,IAAI,IAAGA,IAAI,CAACJ,KAAK,KAAKA,KAAK,CAAC;MACvD,IAAIE,IAAI,CAACG,MAAM,KAAK,CAAC,EAAC;QACpB,MAAMC,EAAE,GAAGJ,IAAI,CAAC,CAAC,CAAC;QAClBN,OAAO,CAACK,KAAK,CAAC,2BAA2B,EAACK,EAAE,CAAC;QAC7C1B,eAAe,CAAC0B,EAAE,CAAC;MACrB,CAAC,MAAI;QACHV,OAAO,CAACb,KAAK,CAAC,2BAA2B,EAACiB,KAAK,CAAC;MAClD;IACF;IACAF,WAAW,CAAC,CAAC;EACf,CAAC;EAED,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACtBX,OAAO,CAACK,KAAK,CAAC,aAAa,CAAC;IAC5B,IAAG,CAAChB,eAAe,IAAIN,YAAY,CAAC6B,EAAE,KAAK,IAAI,EAAC;MAC9C5B,eAAe,CAACP,OAAO,CAAC;MACxBe,cAAc,CAAC,IAAI,CAAC;MACpBN,eAAe,CAAC,KAAK,CAAC;IACxB;IACAgB,WAAW,CAAC,CAAC;EACf,CAAC;EAED,MAAMW,UAAU,GAAGA,CAACC,MAAM,EAACV,KAAK,EAACW,aAAa,KAAK;IACjDf,OAAO,CAACK,KAAK,CAAC,cAAc,CAAC;IAC7B,IAAGtB,YAAY,CAAC6B,EAAE,KAAK,IAAI,EAAC;MAC1B;IACF;IACA,MAAMI,cAAc,GAAG;MACrBJ,EAAE,EAACE,MAAM;MACTV,KAAK,EAACA,KAAK;MACXa,GAAG,EAAC,CAACF,aAAa;IACpB,CAAC;IACDjC,QAAQ,CAAC,CAACkC,cAAc,EAAC,GAAGnC,KAAK,CAAC,CAAC;IACnCG,eAAe,CAACgC,cAAc,CAAC;EACjC,CAAC;EAED/C,SAAS,CAAC,MAAM;IACd,IAAGsB,WAAW,IAAI,CAACJ,KAAK,EAAC;MACvB+B,kBAAkB,CAAC3B,WAAW,CAAC;IACjC;IACA;EACF,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAGjB,MAAM2B,kBAAkB,GAAIzC,OAAO,IAAK;IACtC,MAAM0C,UAAU,GAAG1C,OAAO,CAACmC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG7B,YAAY,CAACkC,GAAG,EAACxC,OAAO,CAAC,GAAGM,YAAY,CAACkC,GAAG,CAACG,GAAG,CAAEZ,IAAI,IAAG;MAClG,IAAGA,IAAI,CAACI,EAAE,KAAK,CAAC,CAAC,EAAC;QAChB,OAAOnC,OAAO;MAChB;MACA,OAAO+B,IAAI;IACb,CAAC,CAAC;IACF,MAAMa,WAAW,GAAG;MAClBT,EAAE,EAAC7B,YAAY,CAAC6B,EAAE;MAClBR,KAAK,EAACrB,YAAY,CAACqB,KAAK;MACxBa,GAAG,EAAEE;IACP,CAAC;IACDnC,eAAe,CAACqC,WAAW,CAAC;IAC5B,MAAMC,YAAY,GAAGzC,KAAK,CAACuC,GAAG,CAAEd,IAAI,IAAG;MACrC,OAAOA,IAAI,CAACM,EAAE,KAAK7B,YAAY,CAAC6B,EAAE,GAAGS,WAAW,GAAGf,IAAI;IACzD,CAAC,CAAC;IACFxB,QAAQ,CAACwC,YAAY,CAAC;IACtB9B,cAAc,CAAC,IAAI,CAAC;IACpBN,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMqC,cAAc,GAAG,MAAOC,MAAM,IAAK;IACvCxB,OAAO,CAACK,KAAK,CAAC,eAAe,CAAC;IAC9B,IAAI,CAAChB,eAAe,EAAE;MACpB,IAAI;QAEFC,iBAAiB,CAAC,IAAI,CAAC;QACvB;QACA,MAAMyB,aAAa,GAAG;UACpBH,EAAE,EAAC,CAAC,CAAC;UACLY,MAAM,EAAEA;QACV,CAAC;QACDhC,cAAc,CACZuB,aACF,CAAC;QACD,MAAMU,GAAG,GAAG,MAAMtD,MAAM,CAACuD,QAAQ,CAAC3C,YAAY,EAACyC,MAAM,CAAC;QACtD,MAAMV,MAAM,GAAGW,GAAG,CAACb,EAAE;QACrB,MAAMR,KAAK,GAAGqB,GAAG,CAACrB,KAAK;QACvB,MAAMuB,QAAQ,GAAGF,GAAG,CAACG,IAAI;QACzBtC,iBAAiB,CAAC,KAAK,CAAC;QACxBF,QAAQ,CAAC,KAAK,CAAC;QACf,IAAGL,YAAY,CAAC6B,EAAE,KAAK,IAAI,EAAC;UAC1BC,UAAU,CAACC,MAAM,EAACV,KAAK,EAACW,aAAa,CAAC;QACxC;QACAvB,cAAc,CAACmC,QAAQ,CAAC;MAC1B,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZzC,QAAQ,CAACyC,GAAG,CAAC;QACb7B,OAAO,CAACiB,GAAG,CAACY,GAAG,CAAC;MAClB,CAAC,SAAO;QACN7B,OAAO,CAACK,KAAK,CAACtB,YAAY,CAAC;MAC7B;IACF;EACF,CAAC;EAGD,MAAM+C,iBAAiB,GAAG,MAAAA,CAAA,KAAY,CAEtC,CAAC;EAGD,oBACEzD,OAAA,CAACC,WAAW,CAACyD,QAAQ;IAACC,KAAK,EAAE;MAC3BnD,KAAK;MACLc,OAAO;MACPR,KAAK;MACLF,YAAY;MACZF,YAAY;MACZoB,YAAY;MACZd,eAAe;MACfsB,SAAS;MACTd,aAAa;MACbiC,iBAAiB;MACjBrC,SAAS;MACTS,WAAW;MACXqB;IAAe,CAAE;IAAA5C,QAAA,EAChBA;EAAQ;IAAAsD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACxD,GAAA,CArKeF,YAAY;AAAA2D,EAAA,GAAZ3D,YAAY;AAAA,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}