{"ast":null,"code":"var _jsxFileName = \"/home/yuval/Desktop/chatbot_app/Chatbot/web/src/components/ChatBox/ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport ChatBoxInput from \"./ChatInput/ChatInput\";\nimport IntroSection from \"./IntroSection\";\nimport ChatPrompt from \"./ChatLog/ChatPrompt\";\nimport { useChat } from '../../contexts/ChatContext';\nimport NewChat from \"./NewChat\";\nimport BotMessage from \"./ChatLog/BotMessage\";\nimport ChatLog from \"./ChatLog\";\nimport ChatHeader from \"./ChatHeader/ChatHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatBox = props => {\n  _s();\n  const {\n    selectedChat\n  } = useChat();\n  const chatLogRef = useRef(null);\n  useEffect(() => {\n    if (chatLogRef.current) {\n      chatLogRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\"\n      });\n    }\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), selectedChat && selectedChat.id === null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(NewChat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: selectedChat.id === -1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(IntroSection, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ChatLog, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false)\n    }, void 0, false)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chatBox\",\n    children: [selectedChat.title, selectedChat.log.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatLogWrapper\",\n      children: selectedChat.log.length > 0 && selectedChat.log.map((chat, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatLog\",\n          ref: chatLogRef,\n          children: [/*#__PURE__*/_jsxDEV(ChatPrompt, {\n            text: chat.prompt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(BotMessage, {\n            chatLogRef: chatLogRef,\n            response: chat.response,\n            animate: selectedChat.log.length - 1 === idx\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, `msg_${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: showIntro ? /*#__PURE__*/_jsxDEV(IntroSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(NewChat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 44\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(ChatBoxInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatBox, \"9Eo+mfBXrgb9kHDdk7kkCaE8LW0=\", false, function () {\n  return [useChat];\n});\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useRef","ChatBoxInput","IntroSection","ChatPrompt","useChat","NewChat","BotMessage","ChatLog","ChatHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBox","props","_s","selectedChat","chatLogRef","current","scrollIntoView","behavior","block","children","fileName","_jsxFileName","lineNumber","columnNumber","id","className","title","log","length","map","chat","idx","ref","text","prompt","response","animate","showIntro","_c","$RefreshReg$"],"sources":["/home/yuval/Desktop/chatbot_app/Chatbot/web/src/components/ChatBox/ChatBox.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport ChatBoxInput from \"./ChatInput/ChatInput\";\nimport IntroSection from \"./IntroSection\";\nimport ChatPrompt from \"./ChatLog/ChatPrompt\";\nimport {useChat} from '../../contexts/ChatContext'\nimport NewChat from \"./NewChat\";\nimport BotMessage from \"./ChatLog/BotMessage\";\nimport ChatLog from \"./ChatLog\";\nimport ChatHeader from \"./ChatHeader/ChatHeader\";\n\nconst ChatBox = (props) => {\n    const {selectedChat} = useChat();\n    const chatLogRef = useRef(null);\n\n    useEffect(() => {\n        if (chatLogRef.current) {\n          chatLogRef.current.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"end\",\n          });\n        }\n        return () => {};\n      }, []);\n\n    return (\n        <>\n            <ChatHeader/>\n            {selectedChat && selectedChat.id === null ? (<>\n                <NewChat/>\n            </>) : (<>\n                {selectedChat.id === -1 ? (<>\n                    <IntroSection/>\n                </>) : (<>\n                    <ChatLog/>\n                </>)}\n            </>)}\n        </>\n    )\n    return (\n        <section className=\"chatBox\">\n\n\n            {selectedChat.title}\n            {selectedChat.log.length > 0 ? (\n                <div className=\"chatLogWrapper\">\n                    {selectedChat.log.length > 0 &&\n                    selectedChat.log.map((chat, idx) => {\n                        return (\n                        <div\n                        className=\"chatLog\"\n                        key={`msg_${idx}`}\n                        ref={chatLogRef}\n                        >\n                            <ChatPrompt text={chat.prompt} />\n                            <BotMessage chatLogRef={chatLogRef} response={chat.response} animate={selectedChat.log.length - 1 === idx} />\n\n                        </div>\n                        \n                    )})}\n                </div>\n            ) : (\n                <>\n                {showIntro?<IntroSection/>:<NewChat/>}\n                </>\n            )}\n            <ChatBoxInput />\n        </section>\n    );\n\n\n\n\n};\n\n\n\nexport default ChatBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}