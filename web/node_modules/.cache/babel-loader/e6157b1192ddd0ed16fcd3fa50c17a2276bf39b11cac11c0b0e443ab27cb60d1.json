{"ast":null,"code":"var _jsxFileName = \"/home/yuval/Desktop/chatbot_app/Chatbot/web/src/components/ChatBox/ChatLog/BotResponse.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport CursorSVG from \"../../General/CursorSVG\";\nimport { useChat } from \"../../../contexts/ChatContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BotResponse = ({\n  chatLogRef,\n  response,\n  animate\n}) => {\n  _s();\n  const [isPrinting, setIsPrinting] = useState(false);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const {\n    printInterval\n  } = useChat();\n  useEffect(() => {\n    if (chatLogRef !== undefined && chatLogRef !== null) {\n      var _chatLogRef$current;\n      (_chatLogRef$current = chatLogRef.current) === null || _chatLogRef$current === void 0 ? void 0 : _chatLogRef$current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'end'\n      });\n    }\n    if (!response) {\n      return;\n    }\n    //setIsPrinting(false);\n\n    let i = 0;\n    const intervalId = setInterval(() => {\n      setCurrentMessage(response.slice(0, i));\n      if (isPrinting === false) {}\n      i++;\n      if (i > response.length) {\n        clearInterval(intervalId);\n        setIsPrinting(false);\n      }\n    }, printInterval);\n    return () => {\n      clearInterval(intervalId);\n      setIsPrinting(true);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chatLogRef, response]);\n  const feedback = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n      id: \"\",\n      style: {\n        whiteSpace: 'pre-wrap'\n      },\n      children: animate ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [currentMessage, isPrinting && /*#__PURE__*/_jsxDEV(CursorSVG, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 26\n        }, this), !isPrinting && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(BotResponse, \"PCL4OMvdqmRU4Xp1Q7vAOTfab44=\", false, function () {\n  return [useChat];\n});\n_c = BotResponse;\nexport default BotResponse;\nvar _c;\n$RefreshReg$(_c, \"BotResponse\");","map":{"version":3,"names":["React","useEffect","useState","CursorSVG","useChat","jsxDEV","_jsxDEV","Fragment","_Fragment","BotResponse","chatLogRef","response","animate","_s","isPrinting","setIsPrinting","currentMessage","setCurrentMessage","printInterval","undefined","_chatLogRef$current","current","scrollIntoView","behavior","block","i","intervalId","setInterval","slice","length","clearInterval","feedback","children","id","style","whiteSpace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/yuval/Desktop/chatbot_app/Chatbot/web/src/components/ChatBox/ChatLog/BotResponse.jsx"],"sourcesContent":["import React, {  useEffect } from \"react\";\nimport { useState } from \"react\";\nimport CursorSVG from \"../../General/CursorSVG\";\nimport { useChat } from \"../../../contexts/ChatContext\";\n\nconst BotResponse = ({chatLogRef,response,animate}) => {\n  const [isPrinting, setIsPrinting] = useState(false);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const {printInterval} = useChat();\n\n\n\n\n  useEffect(() => {\n    if (chatLogRef !== undefined && chatLogRef !== null) {\n      chatLogRef.current?.scrollIntoView({\n        behavior: 'smooth',\n        block: 'end',\n      });\n    }        \n    if(!response){\n      return;\n    }\n    //setIsPrinting(false);\n  \n    let i = 0;\n    \n    const intervalId = setInterval(() => {\n      setCurrentMessage(response.slice(0, i));\n      if(isPrinting === false){\n\n      }\n      i++;\n      if (i > response.length) {\n        clearInterval(intervalId);\n        setIsPrinting(false);\n      }\n    }, printInterval);\n  \n    return () => {\n      clearInterval(intervalId);\n      setIsPrinting(true);\n    };    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chatLogRef,response]);\n\n  const feedback = () => {\n\n  }\n\n  return (\n    <div> \n      <pre id=\"\" style={{ whiteSpace: 'pre-wrap' }}>\n        {animate?(<>\n          {currentMessage}\n          {isPrinting && <CursorSVG />}\n          {!isPrinting && (\n          <div>\n            {/* <button>good</button>\n            <button>bad</button> */}\n          </div>)}\n        </>) : response}\n      </pre>\n    </div>\n  );\n};\n\nexport default BotResponse;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAKC,SAAS,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,OAAO,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,WAAW,GAAGA,CAAC;EAACC,UAAU;EAACC,QAAQ;EAACC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM;IAACgB;EAAa,CAAC,GAAGd,OAAO,CAAC,CAAC;EAKjCH,SAAS,CAAC,MAAM;IACd,IAAIS,UAAU,KAAKS,SAAS,IAAIT,UAAU,KAAK,IAAI,EAAE;MAAA,IAAAU,mBAAA;MACnD,CAAAA,mBAAA,GAAAV,UAAU,CAACW,OAAO,cAAAD,mBAAA,uBAAlBA,mBAAA,CAAoBE,cAAc,CAAC;QACjCC,QAAQ,EAAE,QAAQ;QAClBC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;IACA,IAAG,CAACb,QAAQ,EAAC;MACX;IACF;IACA;;IAEA,IAAIc,CAAC,GAAG,CAAC;IAET,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCV,iBAAiB,CAACN,QAAQ,CAACiB,KAAK,CAAC,CAAC,EAAEH,CAAC,CAAC,CAAC;MACvC,IAAGX,UAAU,KAAK,KAAK,EAAC,CAExB;MACAW,CAAC,EAAE;MACH,IAAIA,CAAC,GAAGd,QAAQ,CAACkB,MAAM,EAAE;QACvBC,aAAa,CAACJ,UAAU,CAAC;QACzBX,aAAa,CAAC,KAAK,CAAC;MACtB;IACF,CAAC,EAAEG,aAAa,CAAC;IAEjB,OAAO,MAAM;MACXY,aAAa,CAACJ,UAAU,CAAC;MACzBX,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,CAAC,CAAI;EACR,CAAC,EAAE,CAACL,UAAU,EAACC,QAAQ,CAAC,CAAC;EAEzB,MAAMoB,QAAQ,GAAGA,CAAA,KAAM,CAEvB,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,eACE1B,OAAA;MAAK2B,EAAE,EAAC,EAAE;MAACC,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAW,CAAE;MAAAH,QAAA,EAC1CpB,OAAO,gBAAEN,OAAA,CAAAE,SAAA;QAAAwB,QAAA,GACPhB,cAAc,EACdF,UAAU,iBAAIR,OAAA,CAACH,SAAS;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC3B,CAACzB,UAAU,iBACZR,OAAA;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGK,CAAE;MAAA,eACP,CAAC,GAAI5B;IAAQ;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA3DIJ,WAAW;EAAA,QAGSL,OAAO;AAAA;AAAAoC,EAAA,GAH3B/B,WAAW;AA6DjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}