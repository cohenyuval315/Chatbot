{"ast":null,"code":"var _jsxFileName = \"/home/yuval/Desktop/chatbot_app/Chatbot/web/src/components/ChatBox/ChatLog/BotMessage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport SvgComponent from \"../../General/BotAvatar\";\nimport Avatar from \"../../General/Avatar\";\nimport BotResponse from \"./BotResponse\";\nimport Error from \"../../General/ErrorMessage\";\nimport Loading from \"./ChatLoading\";\nimport { useChat } from \"../../../contexts/ChatContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotMessage = ({\n  chatLogRef,\n  response,\n  animate\n}) => {\n  _s();\n  const {\n    error\n  } = useChat();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"botMessageMainContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        lineBreak: \"anywhere\"\n      },\n      className: \"botMessageWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        bg: \"black\",\n        className: \"botSVG\",\n        children: /*#__PURE__*/_jsxDEV(SvgComponent, {\n          w: 20,\n          h: 41\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), response ? /*#__PURE__*/_jsxDEV(BotResponse, {\n        response: response,\n        chatLogRef: chatLogRef,\n        animate: animate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Error, {\n        err: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(BotMessage, \"MAw3mpWBMgtCmDanGGGD4244Qwg=\", false, function () {\n  return [useChat];\n});\n_c = BotMessage;\nexport default BotMessage;\nvar _c;\n$RefreshReg$(_c, \"BotMessage\");","map":{"version":3,"names":["React","SvgComponent","Avatar","BotResponse","Error","Loading","useChat","jsxDEV","_jsxDEV","BotMessage","chatLogRef","response","animate","_s","error","className","children","style","lineBreak","bg","w","h","fileName","_jsxFileName","lineNumber","columnNumber","err","_c","$RefreshReg$"],"sources":["/home/yuval/Desktop/chatbot_app/Chatbot/web/src/components/ChatBox/ChatLog/BotMessage.jsx"],"sourcesContent":["import React from \"react\";\nimport SvgComponent from \"../../General/BotAvatar\";\nimport Avatar from \"../../General/Avatar\";\nimport BotResponse from \"./BotResponse\";\nimport Error from \"../../General/ErrorMessage\";\nimport Loading from \"./ChatLoading\";\nimport { useChat } from \"../../../contexts/ChatContext\";\n\nconst BotMessage = ({chatLogRef,response,animate}) => {\n    const {error} = useChat();\n    return (\n\n        <div className=\"botMessageMainContainer\">\n            <div style={{lineBreak:\"anywhere\"}} className=\"botMessageWrapper\">\n            <Avatar bg=\"black\" className=\"botSVG\">\n                <SvgComponent w={20} h={41}  />\n            </Avatar>\n            {response ? (\n                <BotResponse\n                    response={response}\n                    chatLogRef={chatLogRef}\n                    animate={animate}\n                />\n            ) : error ? (\n                <Error err={error} />\n            ) : (\n                <Loading />\n            )}\n            </div>\n        </div>\n    );\n}\nexport default BotMessage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,OAAOC,OAAO,MAAM,eAAe;AACnC,SAASC,OAAO,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,UAAU,GAAGA,CAAC;EAACC,UAAU;EAACC,QAAQ;EAACC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM;IAACC;EAAK,CAAC,GAAGR,OAAO,CAAC,CAAC;EACzB,oBAEIE,OAAA;IAAKO,SAAS,EAAC,yBAAyB;IAAAC,QAAA,eACpCR,OAAA;MAAKS,KAAK,EAAE;QAACC,SAAS,EAAC;MAAU,CAAE;MAACH,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBACjER,OAAA,CAACN,MAAM;QAACiB,EAAE,EAAC,OAAO;QAACJ,SAAS,EAAC,QAAQ;QAAAC,QAAA,eACjCR,OAAA,CAACP,YAAY;UAACmB,CAAC,EAAE,EAAG;UAACC,CAAC,EAAE;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,EACRd,QAAQ,gBACLH,OAAA,CAACL,WAAW;QACRQ,QAAQ,EAAEA,QAAS;QACnBD,UAAU,EAAEA,UAAW;QACvBE,OAAO,EAAEA;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,GACFX,KAAK,gBACLN,OAAA,CAACJ,KAAK;QAACsB,GAAG,EAAEZ;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAErBjB,OAAA,CAACH,OAAO;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACb;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAZ,EAAA,CAvBKJ,UAAU;EAAA,QACIH,OAAO;AAAA;AAAAqB,EAAA,GADrBlB,UAAU;AAwBhB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}