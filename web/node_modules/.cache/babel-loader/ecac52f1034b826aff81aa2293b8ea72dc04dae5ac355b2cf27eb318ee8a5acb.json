{"ast":null,"code":"var _jsxFileName = \"/home/yuval/Desktop/chatbot_app/Chatbot/web/src/components/LeftMenu/NavChatsList/NavChatList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport NavChat from \"./NavChat\";\nimport NewNavChat from \"./NewNavChat\";\nimport { useChat } from \"../../../contexts/ChatContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NavChatList = () => {\n  _s();\n  const {\n    chats\n  } = useChat();\n  const [currentChats, setCurrentChats] = useState(null);\n  useEffect(() => {\n    if (!Array.isArray(chats)) {\n      return;\n    }\n    if (currentChats === null) {\n      const initialChats = chats.map(chat => ({\n        ...chat,\n        new: false\n      }));\n      setCurrentChats(initialChats);\n      return;\n    }\n    const isNewChat = currentChats.length !== chats.length;\n    if (isNewChat) {\n      console.log('New chat detected!');\n      const newChats = chats.map(chat => ({\n        ...chat,\n        new: !currentChats.find(c => c.id === chat.id)\n      }));\n      setCurrentChats(newChats);\n    }\n  }, [chats, currentChats]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navPromptWrapper\",\n      style: {\n        scrolla\n      },\n      children: currentChats && currentChats.map((chat, index) => chat.new === true ? /*#__PURE__*/_jsxDEV(NewNavChat, {\n        title: chat.title\n      }, `chat_${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(NavChat, {\n        title: chat.title\n      }, `chat_${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(NavChatList, \"UJphKsL9UJOUg6fXtfLrz5X69sI=\", false, function () {\n  return [useChat];\n});\n_c = NavChatList;\nexport default NavChatList;\nvar _c;\n$RefreshReg$(_c, \"NavChatList\");","map":{"version":3,"names":["React","useEffect","useState","NavChat","NewNavChat","useChat","jsxDEV","_jsxDEV","Fragment","_Fragment","NavChatList","_s","chats","currentChats","setCurrentChats","Array","isArray","initialChats","map","chat","new","isNewChat","length","console","log","newChats","find","c","id","children","className","style","scrolla","index","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/yuval/Desktop/chatbot_app/Chatbot/web/src/components/LeftMenu/NavChatsList/NavChatList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NavChat from \"./NavChat\";\nimport NewNavChat from \"./NewNavChat\";\nimport { useChat } from \"../../../contexts/ChatContext\";\n\nconst NavChatList = () => {\n    const {chats} = useChat()\n    const [currentChats,setCurrentChats] = useState(null);\n    \n\n    useEffect(() => {\n        if (!Array.isArray(chats)){\n            return;\n        }\n        if (currentChats === null){\n            const initialChats =  chats.map((chat)=>({...chat,new:false}));\n            setCurrentChats(initialChats);\n            return;\n        }\n\n        const isNewChat = currentChats.length !== chats.length;    \n        if (isNewChat) {\n            console.log('New chat detected!');\n            const newChats = chats.map((chat) => ({ ...chat, new: !currentChats.find((c) => c.id === chat.id) }));\n            setCurrentChats(newChats);\n        }\n\n      }, [chats,currentChats]);\n\n    return (\n        <>\n            <div className=\"navPromptWrapper\" style={{scrolla}}>\n                {currentChats&&currentChats.map((chat, index) => (\n                    chat.new === true ? (\n                        <NewNavChat title={chat.title} key={`chat_${index}`} />\n                    ) : (\n                        <NavChat title={chat.title} key={`chat_${index}`} />\n                    )\n                ))}\n            </div>\n        </>\n    );\n}\nexport default NavChatList;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,OAAO,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAACC;EAAK,CAAC,GAAGP,OAAO,CAAC,CAAC;EACzB,MAAM,CAACQ,YAAY,EAACC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAGrDD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACc,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,EAAC;MACtB;IACJ;IACA,IAAIC,YAAY,KAAK,IAAI,EAAC;MACtB,MAAMI,YAAY,GAAIL,KAAK,CAACM,GAAG,CAAEC,IAAI,KAAI;QAAC,GAAGA,IAAI;QAACC,GAAG,EAAC;MAAK,CAAC,CAAC,CAAC;MAC9DN,eAAe,CAACG,YAAY,CAAC;MAC7B;IACJ;IAEA,MAAMI,SAAS,GAAGR,YAAY,CAACS,MAAM,KAAKV,KAAK,CAACU,MAAM;IACtD,IAAID,SAAS,EAAE;MACXE,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC,MAAMC,QAAQ,GAAGb,KAAK,CAACM,GAAG,CAAEC,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAEC,GAAG,EAAE,CAACP,YAAY,CAACa,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKT,IAAI,CAACS,EAAE;MAAE,CAAC,CAAC,CAAC;MACrGd,eAAe,CAACW,QAAQ,CAAC;IAC7B;EAEF,CAAC,EAAE,CAACb,KAAK,EAACC,YAAY,CAAC,CAAC;EAE1B,oBACIN,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACItB,OAAA;MAAKuB,SAAS,EAAC,kBAAkB;MAACC,KAAK,EAAE;QAACC;MAAO,CAAE;MAAAH,QAAA,EAC9ChB,YAAY,IAAEA,YAAY,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEc,KAAK,KACxCd,IAAI,CAACC,GAAG,KAAK,IAAI,gBACbb,OAAA,CAACH,UAAU;QAAC8B,KAAK,EAAEf,IAAI,CAACe;MAAM,GAAO,QAAOD,KAAM,EAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEvD/B,OAAA,CAACJ,OAAO;QAAC+B,KAAK,EAAEf,IAAI,CAACe;MAAM,GAAO,QAAOD,KAAM,EAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAE1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBACR,CAAC;AAEX,CAAC;AAAA3B,EAAA,CArCKD,WAAW;EAAA,QACGL,OAAO;AAAA;AAAAkC,EAAA,GADrB7B,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}