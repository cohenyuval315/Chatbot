{"ast":null,"code":"var _jsxFileName = \"/home/yuval/Desktop/chatbot_app/Chatbot/web/src/components/LeftMenu/NavChatsList/NavChatList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport NavChat from \"./NavChat\";\nimport NewNavChat from \"./NewNavChat\";\nimport { useChat } from \"../../../contexts/ChatContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NavChatList = props => {\n  _s();\n  const {\n    chats\n  } = useChat();\n  const [currentChats, setCurrentChats] = useState(null);\n  useEffect(() => {\n    if (currentChats === null) {\n      const initialChats = chats.map(chat => ({\n        ...chat,\n        new: false\n      }));\n      setCurrentChats(initialChats);\n      return;\n    }\n    const isNewChat = currentChats.length !== chats.length;\n    if (isNewChat) {\n      console.log('New chat detected!');\n      const newChats = chats.map(chat => ({\n        ...chat,\n        new: !currentChats.find(c => c.id === chat.id)\n      }));\n      setCurrentChats(newChats);\n    }\n  }, [chats, currentChats]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navPromptWrapper\",\n      children: chats.map((chat, index) => chat.new === true ? /*#__PURE__*/_jsxDEV(NewNavChat, {\n        title: chat.title\n      }, `chat_${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(NavChat, {\n        title: chat.title\n      }, `chat_${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(NavChatList, \"UJphKsL9UJOUg6fXtfLrz5X69sI=\", false, function () {\n  return [useChat];\n});\n_c = NavChatList;\nexport default NavChatList;\nvar _c;\n$RefreshReg$(_c, \"NavChatList\");","map":{"version":3,"names":["React","useEffect","useState","NavChat","NewNavChat","useChat","jsxDEV","_jsxDEV","Fragment","_Fragment","NavChatList","props","_s","chats","currentChats","setCurrentChats","initialChats","map","chat","new","isNewChat","length","console","log","newChats","find","c","id","children","className","index","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/yuval/Desktop/chatbot_app/Chatbot/web/src/components/LeftMenu/NavChatsList/NavChatList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NavChat from \"./NavChat\";\nimport NewNavChat from \"./NewNavChat\";\n\nimport { useChat } from \"../../../contexts/ChatContext\";\n\nconst NavChatList = (props) => {\n    const {chats} = useChat()\n    const [currentChats,setCurrentChats] = useState(null);\n    \n\n    useEffect(() => {\n\n        if (currentChats === null){\n            const initialChats = chats.map((chat)=>({...chat,new:false}));\n            setCurrentChats(initialChats);\n            return;\n        }\n\n        const isNewChat = currentChats.length !== chats.length;    \n        if (isNewChat) {\n            console.log('New chat detected!');\n            const newChats = chats.map((chat) => ({ ...chat, new: !currentChats.find((c) => c.id === chat.id) }));\n            setCurrentChats(newChats);\n            \n        }\n\n\n      }, [chats, currentChats]);\n\n    return (\n        <>\n            <div className=\"navPromptWrapper\">\n                {chats.map((chat, index) => (\n                    chat.new === true ? (\n                        <NewNavChat title={chat.title} key={`chat_${index}`} />\n                    ) : (\n                        <NavChat title={chat.title} key={`chat_${index}`} />\n                    )\n                ))}\n            </div>\n        </>\n    );\n}\nexport default NavChatList;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,UAAU,MAAM,cAAc;AAErC,SAASC,OAAO,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAM;IAACC;EAAK,CAAC,GAAGR,OAAO,CAAC,CAAC;EACzB,MAAM,CAACS,YAAY,EAACC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAGrDD,SAAS,CAAC,MAAM;IAEZ,IAAIa,YAAY,KAAK,IAAI,EAAC;MACtB,MAAME,YAAY,GAAGH,KAAK,CAACI,GAAG,CAAEC,IAAI,KAAI;QAAC,GAAGA,IAAI;QAACC,GAAG,EAAC;MAAK,CAAC,CAAC,CAAC;MAC7DJ,eAAe,CAACC,YAAY,CAAC;MAC7B;IACJ;IAEA,MAAMI,SAAS,GAAGN,YAAY,CAACO,MAAM,KAAKR,KAAK,CAACQ,MAAM;IACtD,IAAID,SAAS,EAAE;MACXE,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC,MAAMC,QAAQ,GAAGX,KAAK,CAACI,GAAG,CAAEC,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAEC,GAAG,EAAE,CAACL,YAAY,CAACW,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKT,IAAI,CAACS,EAAE;MAAE,CAAC,CAAC,CAAC;MACrGZ,eAAe,CAACS,QAAQ,CAAC;IAE7B;EAGF,CAAC,EAAE,CAACX,KAAK,EAAEC,YAAY,CAAC,CAAC;EAE3B,oBACIP,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACIrB,OAAA;MAAKsB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAC5Bf,KAAK,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEY,KAAK,KACnBZ,IAAI,CAACC,GAAG,KAAK,IAAI,gBACbZ,OAAA,CAACH,UAAU;QAAC2B,KAAK,EAAEb,IAAI,CAACa;MAAM,GAAO,QAAOD,KAAM,EAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEvD5B,OAAA,CAACJ,OAAO;QAAC4B,KAAK,EAAEb,IAAI,CAACa;MAAM,GAAO,QAAOD,KAAM,EAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAE1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAvB,EAAA,CArCKF,WAAW;EAAA,QACGL,OAAO;AAAA;AAAA+B,EAAA,GADrB1B,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}