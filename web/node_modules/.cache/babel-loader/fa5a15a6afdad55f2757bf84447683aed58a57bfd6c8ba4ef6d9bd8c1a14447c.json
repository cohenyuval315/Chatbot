{"ast":null,"code":"var _jsxFileName = \"/home/yuval/Desktop/chatbot_app/Chatbot/web/src/components/ChatBox/ChatLog.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useChat } from \"../../contexts/ChatContext\";\nimport ChatPrompt from \"./ChatLog/ChatPrompt\";\nimport BotMessage from \"./ChatLog/BotMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatLog = () => {\n  _s();\n  const {\n    selectedChat\n  } = useChat();\n  const [currentSelectedChat, setCurrentSelectedChat] = useState(null);\n  const [currentChatLogs, setCurrentChatLogs] = useState(null);\n  const chatLogRef = useRef(null);\n  useEffect(() => {\n    if (currentSelectedChat === null || currentSelectedChat.chat_id !== selectedChat.chat_id) {\n      setCurrentSelectedChat(selectedChat);\n      const logs = selectedChat.logs.map(c => {\n        c.new = false;\n        return c;\n      });\n      console.log(logs);\n      setCurrentChatLogs(logs);\n      return;\n    }\n    const isNewLog = selectedChat.logs.length !== currentChatLogs.length;\n    if (isNewLog) {\n      selectedChat.logs.map(c => {});\n    }\n  }, [selectedChat]);\n  useEffect(() => {\n    if (chatLogRef.current) {\n      chatLogRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\"\n      });\n    }\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatLogWrapper\",\n    children: currentChatLogs && Array.isArray(currentChatLogs) && currentChatLogs.length > 0 && currentChatLogs.map((chat, idx) => {\n      console.log(currentChatLogs);\n      console.log(\"CHAT INDEX:\", idx, \"CHAT:\", chat);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatLogRef,\n        className: \"chatLog\",\n        children: [/*#__PURE__*/_jsxDEV(ChatPrompt, {\n          text: chat.prompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(BotMessage, {\n          chatLogRef: chatLogRef,\n          response: chat.response,\n          animate: selectedChat.logs.length - 1 === idx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, `msg_${idx}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatLog, \"VHz7xbPlXYPc1bmYc3JvK8jJHf0=\", false, function () {\n  return [useChat];\n});\n_c = ChatLog;\nexport default ChatLog;\nvar _c;\n$RefreshReg$(_c, \"ChatLog\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useChat","ChatPrompt","BotMessage","jsxDEV","_jsxDEV","ChatLog","_s","selectedChat","currentSelectedChat","setCurrentSelectedChat","currentChatLogs","setCurrentChatLogs","chatLogRef","chat_id","logs","map","c","new","console","log","isNewLog","length","current","scrollIntoView","behavior","block","className","children","Array","isArray","chat","idx","ref","text","prompt","fileName","_jsxFileName","lineNumber","columnNumber","response","animate","_c","$RefreshReg$"],"sources":["/home/yuval/Desktop/chatbot_app/Chatbot/web/src/components/ChatBox/ChatLog.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useChat } from \"../../contexts/ChatContext\";\nimport ChatPrompt from \"./ChatLog/ChatPrompt\";\nimport BotMessage from \"./ChatLog/BotMessage\";\n\nconst ChatLog = () => {\nconst {selectedChat} = useChat();\nconst [currentSelectedChat,setCurrentSelectedChat] = useState(null);\nconst [currentChatLogs,setCurrentChatLogs] = useState(null);\nconst chatLogRef = useRef(null);\n\nuseEffect(()=>{\n    if (currentSelectedChat === null || currentSelectedChat.chat_id !== selectedChat.chat_id){\n        setCurrentSelectedChat(selectedChat);\n        const logs = selectedChat.logs.map((c)=>{\n          c.new = false\n          return c;\n        })\n        console.log(logs);\n        setCurrentChatLogs(logs);\n        return;\n    }\n    \n    const isNewLog = selectedChat.logs.length !== currentChatLogs.length;\n    if(isNewLog){\n      selectedChat.logs.map((c)=>{\n        \n      })\n    }\n    \n    \n},[selectedChat])\n\nuseEffect(() => {\n    if (chatLogRef.current) {\n      chatLogRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\",\n      });\n    }\n    return () => {};\n  }, []);\n\n\n  return (\n    <div className=\"chatLogWrapper\">\n        {currentChatLogs && Array.isArray(currentChatLogs) && currentChatLogs.length > 0 && currentChatLogs.map((chat, idx) => {\n          console.log(currentChatLogs);\n          console.log(\"CHAT INDEX:\",idx,\"CHAT:\",chat)\n            return (\n            <div ref={chatLogRef} className=\"chatLog\" key={`msg_${idx}`}>\n                <ChatPrompt text={chat.prompt} />\n                <BotMessage chatLogRef={chatLogRef} response={chat.response} animate={selectedChat.logs.length - 1 === idx} />\n            </div>\n        )})}\n    </div>\n  );\n};\n\nexport default ChatLog;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}