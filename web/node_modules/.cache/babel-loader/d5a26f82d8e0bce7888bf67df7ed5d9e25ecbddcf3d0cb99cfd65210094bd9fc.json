{"ast":null,"code":"import { v4 as uuid } from \"uuid\";\nclass APIClient {\n  constructor(host, port) {\n    this._instance = null;\n    if (APIClient._instance) {\n      return APIClient._instance;\n    }\n    APIClient.instance = this;\n    this.base_url = `${this.host}:${this.port}`;\n  }\n  async _request(method, endpoint, body = null) {\n    const requestOptions = {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    if (body !== null) {\n      requestOptions.body = JSON.stringify(body);\n    }\n    try {\n      const response = await fetch(`${this.base_url}${endpoint}`, requestOptions);\n      const data = await response.json();\n      if (response.ok) {\n        if (response.statusCode !== 200) {} else {}\n        return data;\n      } else {\n        console.error(`Request failed with status ${response.status}: ${data.message}`);\n        throw new Error(data.message || 'An error occurred during the request.');\n      }\n    } catch (error) {\n      console.error(error.message);\n      throw error;\n    }\n  }\n  async fetchChats() {\n    const endpoint = \"/c\";\n    const method = \"GET\";\n    const data = await this._request(method, endpoint);\n    return data;\n  }\n  async converse(chat, prompt) {\n    const chat_id = chat.id;\n    if (!chat_id) {\n      return await self.create_new_chat(prompt);\n    } else {\n      return await self.update_chat(chat_id, prompt);\n    }\n  }\n  async create_new_chat(prompt) {\n    const endpoint = \"/c\";\n    const method = \"POST\";\n    const url = this.base_url + path;\n    const data = {\n      \"prompt\": prompt\n    };\n    this._request(method, endpoint);\n    const response = await fetch(url, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const res = await response.json();\n    if (res.statusCode !== 200) {\n      return res.message;\n    } else {\n      return res.data;\n    }\n  }\n  async update_chat(chat_id, prompt) {\n    const path = `/c/${chat_id}`;\n    const method = \"PUT\";\n    const url = this.base_url + path;\n    const data = {\n      \"prompt\": prompt\n    };\n    const response = await fetch(url, {\n      method: method,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const res = await response.json();\n    if (res.statusCode !== 200) {\n      return res.message;\n    } else {\n      return res.data;\n    }\n  }\n}\nconst client = function () {\n  host = \"localhost\";\n  port = 3001;\n  const api_client = new APIClient(host, port);\n  return api_client;\n}();\nexport default client;","map":{"version":3,"names":["v4","uuid","APIClient","constructor","host","port","_instance","instance","base_url","_request","method","endpoint","body","requestOptions","headers","JSON","stringify","response","fetch","data","json","ok","statusCode","console","error","status","message","Error","fetchChats","converse","chat","prompt","chat_id","id","self","create_new_chat","update_chat","url","path","res","client","api_client"],"sources":["/home/yuval/Desktop/chatbot_app/Chatbot/web/src/API/APIClient.jsx"],"sourcesContent":["import { v4 as uuid } from \"uuid\";\n\nclass APIClient {\n    _instance = null; \n    constructor(host,port) {  \n      if(APIClient._instance){\n        return APIClient._instance;\n      }\n      APIClient.instance = this;\n      this.base_url = `${this.host}:${this.port}`;\n    }\n  \n  async _request(method,endpoint, body = null) {\n    const requestOptions = {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    };\n    if (body !== null) {\n      requestOptions.body = JSON.stringify(body);\n    }\n  \n    try {\n      const response = await fetch(`${this.base_url}${endpoint}`, requestOptions);\n      const data = await response.json();\n      if (response.ok) {\n        if (response.statusCode !== 200){\n          \n        }else{\n          \n        }\n        return data; \n      } else {\n        console.error(`Request failed with status ${response.status}: ${data.message}`);\n        throw new Error(data.message || 'An error occurred during the request.');\n      }\n    } catch (error) {\n      console.error(error.message);\n      throw error;\n    }\n  }\n\n    async fetchChats() {\n      const endpoint = \"/c\"\n      const method = \"GET\"\n      const data = await this._request(method,endpoint)\n      return data;\n    }\n\n    async converse(chat,prompt){\n      const chat_id = chat.id\n      if (!chat_id){\n        return await self.create_new_chat(prompt)\n      }else{\n        return await self.update_chat(chat_id,prompt)\n      }\n    }\n\n    async create_new_chat(prompt){\n      const endpoint = \"/c\"\n      const method = \"POST\"\n      const url = this.base_url + path\n      const data = {\n        \"prompt\":prompt\n      }\n      this._request(method,endpoint)\n      const response = await fetch(url, {\n        method: method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n      const res = await response.json();\n      if (res.statusCode !== 200){\n        return res.message\n      }else{\n        return res.data\n      }\n    }\n\n    async update_chat(chat_id,prompt){\n      const path = `/c/${chat_id}`\n      const method = \"PUT\"\n      const url = this.base_url + path\n      const data = {\n        \"prompt\":prompt\n      }\n      const response = await fetch(url, {\n        method: method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n      const res = await response.json();\n      if (res.statusCode !== 200){\n        return res.message\n      }else{\n        return res.data\n      }\n    }\n\n}\n\nconst client = (function() {\n  host = \"localhost\"\n  port = 3001\n  const api_client = new APIClient(host,port);\n  return api_client;\n})();\n\n\nexport default client;"],"mappings":"AAAA,SAASA,EAAE,IAAIC,IAAI,QAAQ,MAAM;AAEjC,MAAMC,SAAS,CAAC;EAEZC,WAAWA,CAACC,IAAI,EAACC,IAAI,EAAE;IAAA,KADvBC,SAAS,GAAG,IAAI;IAEd,IAAGJ,SAAS,CAACI,SAAS,EAAC;MACrB,OAAOJ,SAAS,CAACI,SAAS;IAC5B;IACAJ,SAAS,CAACK,QAAQ,GAAG,IAAI;IACzB,IAAI,CAACC,QAAQ,GAAI,GAAE,IAAI,CAACJ,IAAK,IAAG,IAAI,CAACC,IAAK,EAAC;EAC7C;EAEF,MAAMI,QAAQA,CAACC,MAAM,EAACC,QAAQ,EAAEC,IAAI,GAAG,IAAI,EAAE;IAC3C,MAAMC,cAAc,GAAG;MACrBH,MAAM,EAAEA,MAAM;MACdI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IACD,IAAIF,IAAI,KAAK,IAAI,EAAE;MACjBC,cAAc,CAACD,IAAI,GAAGG,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC;IAC5C;IAEA,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAE,IAAI,CAACV,QAAS,GAAEG,QAAS,EAAC,EAAEE,cAAc,CAAC;MAC3E,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACf,IAAIJ,QAAQ,CAACK,UAAU,KAAK,GAAG,EAAC,CAEhC,CAAC,MAAI,CAEL;QACA,OAAOH,IAAI;MACb,CAAC,MAAM;QACLI,OAAO,CAACC,KAAK,CAAE,8BAA6BP,QAAQ,CAACQ,MAAO,KAAIN,IAAI,CAACO,OAAQ,EAAC,CAAC;QAC/E,MAAM,IAAIC,KAAK,CAACR,IAAI,CAACO,OAAO,IAAI,uCAAuC,CAAC;MAC1E;IACF,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;MAC5B,MAAMF,KAAK;IACb;EACF;EAEE,MAAMI,UAAUA,CAAA,EAAG;IACjB,MAAMjB,QAAQ,GAAG,IAAI;IACrB,MAAMD,MAAM,GAAG,KAAK;IACpB,MAAMS,IAAI,GAAG,MAAM,IAAI,CAACV,QAAQ,CAACC,MAAM,EAACC,QAAQ,CAAC;IACjD,OAAOQ,IAAI;EACb;EAEA,MAAMU,QAAQA,CAACC,IAAI,EAACC,MAAM,EAAC;IACzB,MAAMC,OAAO,GAAGF,IAAI,CAACG,EAAE;IACvB,IAAI,CAACD,OAAO,EAAC;MACX,OAAO,MAAME,IAAI,CAACC,eAAe,CAACJ,MAAM,CAAC;IAC3C,CAAC,MAAI;MACH,OAAO,MAAMG,IAAI,CAACE,WAAW,CAACJ,OAAO,EAACD,MAAM,CAAC;IAC/C;EACF;EAEA,MAAMI,eAAeA,CAACJ,MAAM,EAAC;IAC3B,MAAMpB,QAAQ,GAAG,IAAI;IACrB,MAAMD,MAAM,GAAG,MAAM;IACrB,MAAM2B,GAAG,GAAG,IAAI,CAAC7B,QAAQ,GAAG8B,IAAI;IAChC,MAAMnB,IAAI,GAAG;MACX,QAAQ,EAACY;IACX,CAAC;IACD,IAAI,CAACtB,QAAQ,CAACC,MAAM,EAACC,QAAQ,CAAC;IAC9B,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACmB,GAAG,EAAE;MAChC3B,MAAM,EAAEA,MAAM;MACdI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDF,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACG,IAAI;IAC3B,CAAC,CAAC;IACF,MAAMoB,GAAG,GAAG,MAAMtB,QAAQ,CAACG,IAAI,CAAC,CAAC;IACjC,IAAImB,GAAG,CAACjB,UAAU,KAAK,GAAG,EAAC;MACzB,OAAOiB,GAAG,CAACb,OAAO;IACpB,CAAC,MAAI;MACH,OAAOa,GAAG,CAACpB,IAAI;IACjB;EACF;EAEA,MAAMiB,WAAWA,CAACJ,OAAO,EAACD,MAAM,EAAC;IAC/B,MAAMO,IAAI,GAAI,MAAKN,OAAQ,EAAC;IAC5B,MAAMtB,MAAM,GAAG,KAAK;IACpB,MAAM2B,GAAG,GAAG,IAAI,CAAC7B,QAAQ,GAAG8B,IAAI;IAChC,MAAMnB,IAAI,GAAG;MACX,QAAQ,EAACY;IACX,CAAC;IACD,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAACmB,GAAG,EAAE;MAChC3B,MAAM,EAAEA,MAAM;MACdI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDF,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACG,IAAI;IAC3B,CAAC,CAAC;IACF,MAAMoB,GAAG,GAAG,MAAMtB,QAAQ,CAACG,IAAI,CAAC,CAAC;IACjC,IAAImB,GAAG,CAACjB,UAAU,KAAK,GAAG,EAAC;MACzB,OAAOiB,GAAG,CAACb,OAAO;IACpB,CAAC,MAAI;MACH,OAAOa,GAAG,CAACpB,IAAI;IACjB;EACF;AAEJ;AAEA,MAAMqB,MAAM,GAAI,YAAW;EACzBpC,IAAI,GAAG,WAAW;EAClBC,IAAI,GAAG,IAAI;EACX,MAAMoC,UAAU,GAAG,IAAIvC,SAAS,CAACE,IAAI,EAACC,IAAI,CAAC;EAC3C,OAAOoC,UAAU;AACnB,CAAC,CAAE,CAAC;AAGJ,eAAeD,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}